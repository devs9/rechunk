/* tslint:disable */
/* eslint-disable */
/**
 * ReChunk API
 * API for managing chunks in the ReChunk project.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {mapValues} from '../runtime';
/**
 *
 * @export
 * @interface Project
 */
export interface Project {
  /**
   *
   * @type {string}
   * @memberof Project
   */
  $schema?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  project?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  readKey?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  writeKey?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  publicKey?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  privateKey?: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  host?: string;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): value is Project {
  return true;
}

export function ProjectFromJSON(json: any): Project {
  return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Project {
  if (json == null) {
    return json;
  }
  return {
    $schema: json['$schema'] == null ? undefined : json['$schema'],
    project: json['project'] == null ? undefined : json['project'],
    readKey: json['readKey'] == null ? undefined : json['readKey'],
    writeKey: json['writeKey'] == null ? undefined : json['writeKey'],
    publicKey: json['publicKey'] == null ? undefined : json['publicKey'],
    privateKey: json['privateKey'] == null ? undefined : json['privateKey'],
    host: json['host'] == null ? undefined : json['host'],
  };
}

export function ProjectToJSON(value?: Project | null): any {
  if (value == null) {
    return value;
  }
  return {
    $schema: value['$schema'],
    project: value['project'],
    readKey: value['readKey'],
    writeKey: value['writeKey'],
    publicKey: value['publicKey'],
    privateKey: value['privateKey'],
    host: value['host'],
  };
}
